//1.Реализуйте класс, который будет использоваться для журналирования (записи логов) действий в приложении.

//Для журналирования выбираю порождающий паттерн "одиночка", так как он гарантирует, что класс имеет только один экземпляр, и предоставляет глобальную точку доступа к этому экземпляру. Это отлично подходит для журналирования, так как обычно требуется только один объект для записи логов во всей программе.

class Logger {
  static Logger? _singleton; //приватное ститическое поле
  List<String> _logs = [];

  // Статический метод создающий метод для получения одиночки
  static Logger get instance {
    if (_singleton == null) {
      _singleton = Logger._internal();
    }
    return _singleton!;
  }
  // Приватный конструктор
  Logger._internal();
  // Метод для добавления логов
  void log(String message) {
    _logs.add(message);
  }
  // Метод для получения логов
  List<String> get logs => _logs;
}


void main() {
  var logger = Logger.instance;
  logger.log("Приложение было запущено");
  logger.log("Пользователь вошел в систему");
  print(logger.logs);
}

